trigger:

- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  displayName: Build .NET project
  steps:
  - task: PowerShell@2
    inputs:
      filePath: './services/Recipes/CreateConnectionString.ps1'
      workingDirectory: './services/Recipes'
    env:
      DATABASEURL: $(DatabaseUrl)
      DATABASEUSERNAME: $(DatabaseUsername)
      DATABASEPASSWORD: $(DatabasePassword)
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.fsproj'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/*.fsproj'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

- deployment: VMDeploy
  dependsOn: Build
  displayName: web
  pool:
    vmImage: 'Ubuntu-18.04'
  environment:
    name: Dev
    resourceType: VirtualMachine
  strategy:
    runOnce:
      deploy:
        steps:
        - script: dotnet $(Pipeline.Workspace)/drop/**/Recipes.dll